(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>c});var r=t(537),a=t.n(r),o=t(645),i=t.n(o)()(a());i.push([e.id,"body {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 50px;\n  font-family: Arial, Helvetica, sans-serif;\n}\n\n.player-board {\n  width: 200px;\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n}\n\n.player-tile {\n  width: 20px;\n  height: 20px;\n  border: 1px solid black;\n}\n\n.boat-tile {\n  width: 20px;\n  height: 20px;\n  background-color: black;\n  border: 1px solid black;\n}\n\n.miss {\n  width: 20px;\n  height: 20px;\n  background-color: blue;\n  border: 1px solid black;\n}\n\n.hit {\n  width: 20px;\n  height: 20px;\n  background-color: red;\n  border: 1px solid black;\n}\n\n.computer-board {\n  width: 200px;\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n}\n\n.computer-tile {\n  width: 20px;\n  height: 20px;\n  border: 1px solid black;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,uBAAuB;EACvB,SAAS;EACT,yCAAyC;AAC3C;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,sCAAsC;EACtC,mCAAmC;AACrC;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,uBAAuB;AACzB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,uBAAuB;EACvB,uBAAuB;AACzB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,sBAAsB;EACtB,uBAAuB;AACzB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,qBAAqB;EACrB,uBAAuB;AACzB;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,sCAAsC;EACtC,mCAAmC;AACrC;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,uBAAuB;AACzB",sourcesContent:["body {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 50px;\n  font-family: Arial, Helvetica, sans-serif;\n}\n\n.player-board {\n  width: 200px;\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n}\n\n.player-tile {\n  width: 20px;\n  height: 20px;\n  border: 1px solid black;\n}\n\n.boat-tile {\n  width: 20px;\n  height: 20px;\n  background-color: black;\n  border: 1px solid black;\n}\n\n.miss {\n  width: 20px;\n  height: 20px;\n  background-color: blue;\n  border: 1px solid black;\n}\n\n.hit {\n  width: 20px;\n  height: 20px;\n  background-color: red;\n  border: 1px solid black;\n}\n\n.computer-board {\n  width: 200px;\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n}\n\n.computer-tile {\n  width: 20px;\n  height: 20px;\n  border: 1px solid black;\n}\n"],sourceRoot:""}]);const c=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var u=0;u<e.length;u++){var l=[].concat(e[u]);r&&i[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */"),i=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([o]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var o={},i=[],c=0;c<e.length;c++){var s=e[c],u=r.base?s[0]+r.base:s[0],l=o[u]||0,d="".concat(u," ").concat(l);o[u]=l+1;var p=t(d),A={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)n[p].references++,n[p].updater(A);else{var m=a(A,r);r.byIndex=c,n.splice(c,0,{identifier:d,updater:m,references:1})}i.push(d)}return i}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var c=t(o[i]);n[c].references--}for(var s=r(e,a),u=0;u<o.length;u++){var l=t(o[u]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}o=s}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var a=n[r];if(void 0!==a)return a.exports;var o=n[r]={id:r,exports:{}};return e[r](o,o.exports,t),o.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),r=t(795),a=t.n(r),o=t(569),i=t.n(o),c=t(565),s=t.n(c),u=t(216),l=t.n(u),d=t(589),p=t.n(d),A=t(426),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=i().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=l(),n()(A.Z,m),A.Z&&A.Z.locals&&A.Z.locals;const f=function(e){var n=document.querySelector(".gameboard1");n.innerHTML="";var t=document.createElement("div");t.className="player-board",e.map((function(e){return e.map((function(e){var n=document.createElement("div");switch(e){case null:n.className="player-tile";break;case"miss":n.className="miss";break;case"hit":n.className="hit";break;default:n.className="boat-tile"}return t.appendChild(n),n}))})),n.appendChild(t)},h=function(e){var n=document.querySelector(".gameboard2");n.innerHTML="";var t=document.createElement("div");t.className="computer-board",e.map((function(e){return e.map((function(e){var n=document.createElement("div");switch(n.className="computer-tile",e){case null:default:n.className="computer-tile";break;case"miss":n.classList.add("miss");break;case"hit":n.classList.add("hit")}return t.appendChild(n),n}))})),n.appendChild(t)},y=function(e){document.querySelector(".victory-message").innerText=e},b=function(e){var n=Array.from(Array(e)).map((function(){return!1}));return{length:n.length,hitPositions:n,hit:function(e){n[e]=!0},isSunk:function(){return!n.includes(!1)}}},x=function(e){var n,t,r,a,o,i,c=(n=Array.from(Array(10)).map((function(){return[null,null,null,null,null,null,null,null,null,null]})),t=b(5),r=b(4),a=b(3),o=b(3),i=b(2),{state:n,receiveAttack:function(e,c){var s=n[e][c];if("miss"!==s&&"hit"!==s)if(null!==s){var u=s[0],l=s[1];switch(u){case"carrier":t.hit(l);break;case"battleship":r.hit(l);break;case"cruiser":a.hit(l);break;case"submarine":o.hit(l);break;case"destroyer":i.hit(l);break;default:throw new Error("Bad input in receiveAttack function")}n[e][c]="hit"}else n[e][c]="miss"},allShipsSunk:function(){return i.isSunk()&&r.isSunk()&&a.isSunk()&&o.isSunk()&&t.isSunk()},placeShips:function(e){e.map((function(e){e.coordinates.map((function(t,r){var a=t.y,o=t.x;n[a][o]=[e.name,r]}))}))}}),s=[[0,0],[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],[0,7],[0,8],[0,9],[1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7],[1,8],[1,9],[2,0],[2,1],[2,2],[2,3],[2,4],[2,5],[2,6],[2,7],[2,8],[2,9],[3,0],[3,1],[3,2],[3,3],[3,4],[3,5],[3,6],[3,7],[3,8],[3,9],[4,0],[4,1],[4,2],[4,3],[4,4],[4,5],[4,6],[4,7],[4,8],[4,9],[5,0],[5,1],[5,2],[5,3],[5,4],[5,5],[5,6],[5,7],[5,8],[5,9],[6,0],[6,1],[6,2],[6,3],[6,4],[6,5],[6,6],[6,7],[6,8],[6,9],[7,0],[7,1],[7,2],[7,3],[7,4],[7,5],[7,6],[7,7],[7,8],[7,9],[8,0],[8,1],[8,2],[8,3],[8,4],[8,5],[8,6],[8,7],[8,8],[8,9],[9,0],[9,1],[9,2],[9,3],[9,4],[9,5],[9,6],[9,7],[9,8],[9,9]];return{name:e,gameboard:c,changeToCoordinates:function(e){return s[e]}}};var v=function(){return v=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var a in n=arguments[t])Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a]);return e},v.apply(this,arguments)};const g=function(){var e=[[0,0],[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],[0,7],[0,8],[0,9],[1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7],[1,8],[1,9],[2,0],[2,1],[2,2],[2,3],[2,4],[2,5],[2,6],[2,7],[2,8],[2,9],[3,0],[3,1],[3,2],[3,3],[3,4],[3,5],[3,6],[3,7],[3,8],[3,9],[4,0],[4,1],[4,2],[4,3],[4,4],[4,5],[4,6],[4,7],[4,8],[4,9],[5,0],[5,1],[5,2],[5,3],[5,4],[5,5],[5,6],[5,7],[5,8],[5,9],[6,0],[6,1],[6,2],[6,3],[6,4],[6,5],[6,6],[6,7],[6,8],[6,9],[7,0],[7,1],[7,2],[7,3],[7,4],[7,5],[7,6],[7,7],[7,8],[7,9],[8,0],[8,1],[8,2],[8,3],[8,4],[8,5],[8,6],[8,7],[8,8],[8,9],[9,0],[9,1],[9,2],[9,3],[9,4],[9,5],[9,6],[9,7],[9,8],[9,9]];return v(v({},x("Computer")),{giveCoordinates:function(){var n=Math.floor(Math.random()*e.length),t=e[n];return e=e.filter((function(e){return e!==t})),t}})};var C=x("Human");C.gameboard.placeShips([{name:"destroyer",coordinates:[{y:1,x:5},{y:1,x:6}]},{name:"cruiser",coordinates:[{y:3,x:9},{y:4,x:9},{y:5,x:9}]},{name:"submarine",coordinates:[{y:7,x:4},{y:7,x:5},{y:7,x:6}]},{name:"battleship",coordinates:[{y:0,x:0},{y:0,x:1},{y:0,x:2},{y:0,x:3}]},{name:"carrier",coordinates:[{y:9,x:5},{y:9,x:6},{y:9,x:7},{y:9,x:8},{y:9,x:9}]}]);var E=g();E.gameboard.placeShips([{name:"destroyer",coordinates:[{y:3,x:1},{y:3,x:2}]},{name:"cruiser",coordinates:[{y:3,x:7},{y:4,x:7},{y:5,x:7}]},{name:"submarine",coordinates:[{y:1,x:4},{y:1,x:5},{y:1,x:6}]},{name:"battleship",coordinates:[{y:0,x:6},{y:0,x:7},{y:0,x:8},{y:0,x:9}]},{name:"carrier",coordinates:[{y:9,x:5},{y:9,x:6},{y:9,x:7},{y:9,x:8},{y:9,x:9}]}]);var k=function(){var e=!1;f(C.gameboard.state),h(E.gameboard.state),document.querySelectorAll(".computer-tile").forEach((function(n,t){n.addEventListener("click",(function(){if(!e){var n=C.changeToCoordinates(t);E.gameboard.receiveAttack(n[0],n[1]),h(E.gameboard.state)}if(E.gameboard.allShipsSunk()&&(y("Human wins! :)"),C=x("Human"),E=g(),e=!0),!e){var r=E.giveCoordinates();C.gameboard.receiveAttack(r[0],r[1]),f(C.gameboard.state)}C.gameboard.allShipsSunk()&&(y("Computer wins! :("),C=x("Human"),E=g(),e=!0),k()}))}))};k()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,