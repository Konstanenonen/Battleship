(()=>{"use strict";var e={426:(e,n,r)=>{r.d(n,{Z:()=>c});var t=r(537),a=r.n(t),o=r(645),i=r.n(o)()(a());i.push([e.id,"h1 {\n  color: green;\n}\n\nbody {\n  display: flex;\n  flex-direction: column;\n  gap: 100px;\n}\n\n.player-board {\n  width: 200px;\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n}\n\n.player-tile {\n  width: 20px;\n  height: 20px;\n  border: 1px solid black;\n}\n\n.boat-tile {\n  width: 20px;\n  height: 20px;\n  background-color: black;\n  border: 1px solid black;\n}\n\n.miss {\n  width: 20px;\n  height: 20px;\n  background-color: blue;\n  border: 1px solid black;\n}\n\n.hit {\n  width: 20px;\n  height: 20px;\n  background-color: red;\n  border: 1px solid black;\n}\n\n.computer-board {\n  width: 200px;\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n}\n\n.computer-tile {\n  width: 20px;\n  height: 20px;\n  border: 1px solid black;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,YAAY;AACd;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,UAAU;AACZ;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,sCAAsC;EACtC,mCAAmC;AACrC;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,uBAAuB;AACzB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,uBAAuB;EACvB,uBAAuB;AACzB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,sBAAsB;EACtB,uBAAuB;AACzB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,qBAAqB;EACrB,uBAAuB;AACzB;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,sCAAsC;EACtC,mCAAmC;AACrC;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,uBAAuB;AACzB",sourcesContent:["h1 {\n  color: green;\n}\n\nbody {\n  display: flex;\n  flex-direction: column;\n  gap: 100px;\n}\n\n.player-board {\n  width: 200px;\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n}\n\n.player-tile {\n  width: 20px;\n  height: 20px;\n  border: 1px solid black;\n}\n\n.boat-tile {\n  width: 20px;\n  height: 20px;\n  background-color: black;\n  border: 1px solid black;\n}\n\n.miss {\n  width: 20px;\n  height: 20px;\n  background-color: blue;\n  border: 1px solid black;\n}\n\n.hit {\n  width: 20px;\n  height: 20px;\n  background-color: red;\n  border: 1px solid black;\n}\n\n.computer-board {\n  width: 200px;\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n}\n\n.computer-tile {\n  width: 20px;\n  height: 20px;\n  border: 1px solid black;\n}\n"],sourceRoot:""}]);const c=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var r="",t=void 0!==n[5];return n[4]&&(r+="@supports (".concat(n[4],") {")),n[2]&&(r+="@media ".concat(n[2]," {")),t&&(r+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),r+=e(n),t&&(r+="}"),n[2]&&(r+="}"),n[4]&&(r+="}"),r})).join("")},n.i=function(e,r,t,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(t)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var l=0;l<e.length;l++){var u=[].concat(e[l]);t&&i[u[0]]||(void 0!==o&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=o),r&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=r):u[2]=r),a&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=a):u[4]="".concat(a)),n.push(u))}},n}},537:e=>{e.exports=function(e){var n=e[1],r=e[3];if(!r)return n;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),o="/*# ".concat(a," */"),i=r.sources.map((function(e){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([o]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function r(e){for(var r=-1,t=0;t<n.length;t++)if(n[t].identifier===e){r=t;break}return r}function t(e,t){for(var o={},i=[],c=0;c<e.length;c++){var s=e[c],l=t.base?s[0]+t.base:s[0],u=o[l]||0,d="".concat(l," ").concat(u);o[l]=u+1;var p=r(d),A={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)n[p].references++,n[p].updater(A);else{var m=a(A,t);t.byIndex=c,n.splice(c,0,{identifier:d,updater:m,references:1})}i.push(d)}return i}function a(e,n){var r=n.domAPI(n);return r.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;r.update(e=n)}else r.remove()}}e.exports=function(e,a){var o=t(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var c=r(o[i]);n[c].references--}for(var s=t(e,a),l=0;l<o.length;l++){var u=r(o[l]);0===n[u].references&&(n[u].updater(),n.splice(u,1))}o=s}}},569:e=>{var n={};e.exports=function(e,r){var t=function(e){if(void 0===n[e]){var r=document.querySelector(e);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}n[e]=r}return n[e]}(e);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,r)=>{e.exports=function(e){var n=r.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(r){!function(e,n,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var a=void 0!==r.layer;a&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,a&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var o=r.sourceMap;o&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(t,e,n.options)}(n,e,r)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function r(t){var a=n[t];if(void 0!==a)return a.exports;var o=n[t]={id:t,exports:{}};return e[t](o,o.exports,r),o.exports}r.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return r.d(n,{a:n}),n},r.d=(e,n)=>{for(var t in n)r.o(n,t)&&!r.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},r.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),r.nc=void 0,(()=>{var e=r(379),n=r.n(e),t=r(795),a=r.n(t),o=r(569),i=r.n(o),c=r(565),s=r.n(c),l=r(216),u=r.n(l),d=r(589),p=r.n(d),A=r(426),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=i().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=u(),n()(A.Z,m),A.Z&&A.Z.locals&&A.Z.locals;const f=function(e){var n=document.querySelector(".gameboard1");n.innerHTML="";var r=document.createElement("div");r.className="player-board",e.map((function(e){return e.map((function(e){var n=document.createElement("div");switch(e){case null:n.className="player-tile";break;case"miss":n.className="miss";break;case"hit":n.className="hit";break;default:n.className="boat-tile"}return r.appendChild(n),n}))})),n.appendChild(r)},h=function(e){var n=document.querySelector(".gameboard2");n.innerHTML="";var r=document.createElement("div");r.className="computer-board",e.map((function(e){return e.map((function(e){var n=document.createElement("div");switch(n.className="computer-tile",e){case null:default:n.className="computer-tile";break;case"miss":n.classList.add("miss");break;case"hit":n.classList.add("hit")}return r.appendChild(n),n}))})),n.appendChild(r)},b=function(e){var n=Array.from(Array(e)).map((function(){return!1}));return{length:n.length,hitPositions:n,hit:function(e){n[e]=!0},isSunk:function(){return!n.includes(!1)}}},v=function(e){return{name:e,gameboard:(n=Array.from(Array(10)).map((function(){return[null,null,null,null,null,null,null,null,null,null]})),r=b(5),t=b(4),a=b(3),o=b(3),i=b(2),n[9][5]=["carrier",0],n[9][6]=["carrier",1],n[9][7]=["carrier",2],n[9][8]=["carrier",3],n[9][9]=["carrier",4],n[0][0]=["battleship",0],n[0][1]=["battleship",1],n[0][2]=["battleship",2],n[0][3]=["battleship",3],n[7][4]=["submarine",0],n[7][5]=["submarine",1],n[7][6]=["submarine",2],n[3][9]=["cruiser",0],n[4][9]=["cruiser",1],n[5][9]=["cruiser",2],n[1][5]=["destroyer",0],n[1][6]=["destroyer",1],{state:n,receiveAttack:function(e,c){var s=n[e][c];if("miss"!==s&&"hit"!==s)if(null!==s){var l=s[0],u=s[1];switch(l){case"carrier":r.hit(u);break;case"battleship":t.hit(u);break;case"cruiser":a.hit(u);break;case"submarine":o.hit(u);break;case"destroyer":i.hit(u)}n[e][c]="hit"}else n[e][c]="miss"},allShipsSunk:function(){return i.isSunk()&&t.isSunk()&&a.isSunk()&&o.isSunk()&&r.isSunk()}}),changeToCoordinates:function(e){return[[0,0],[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],[0,7],[0,8],[0,9],[1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7],[1,8],[1,9],[2,0],[2,1],[2,2],[2,3],[2,4],[2,5],[2,6],[2,7],[2,8],[2,9],[3,0],[3,1],[3,2],[3,3],[3,4],[3,5],[3,6],[3,7],[3,8],[3,9],[4,0],[4,1],[4,2],[4,3],[4,4],[4,5],[4,6],[4,7],[4,8],[4,9],[5,0],[5,1],[5,2],[5,3],[5,4],[5,5],[5,6],[5,7],[5,8],[5,9],[6,0],[6,1],[6,2],[6,3],[6,4],[6,5],[6,6],[6,7],[6,8],[6,9],[7,0],[7,1],[7,2],[7,3],[7,4],[7,5],[7,6],[7,7],[7,8],[7,9],[8,0],[8,1],[8,2],[8,3],[8,4],[8,5],[8,6],[8,7],[8,8],[8,9],[9,0],[9,1],[9,2],[9,3],[9,4],[9,5],[9,6],[9,7],[9,8],[9,9]][e]}};var n,r,t,a,o,i};var g=function(){return g=Object.assign||function(e){for(var n,r=1,t=arguments.length;r<t;r++)for(var a in n=arguments[r])Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a]);return e},g.apply(this,arguments)};var C,E,y,x=v("Human"),k=(C=v("Computer"),E=[[0,0],[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],[0,7],[0,8],[0,9],[1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7],[1,8],[1,9],[2,0],[2,1],[2,2],[2,3],[2,4],[2,5],[2,6],[2,7],[2,8],[2,9],[3,0],[3,1],[3,2],[3,3],[3,4],[3,5],[3,6],[3,7],[3,8],[3,9],[4,0],[4,1],[4,2],[4,3],[4,4],[4,5],[4,6],[4,7],[4,8],[4,9],[5,0],[5,1],[5,2],[5,3],[5,4],[5,5],[5,6],[5,7],[5,8],[5,9],[6,0],[6,1],[6,2],[6,3],[6,4],[6,5],[6,6],[6,7],[6,8],[6,9],[7,0],[7,1],[7,2],[7,3],[7,4],[7,5],[7,6],[7,7],[7,8],[7,9],[8,0],[8,1],[8,2],[8,3],[8,4],[8,5],[8,6],[8,7],[8,8],[8,9],[9,0],[9,1],[9,2],[9,3],[9,4],[9,5],[9,6],[9,7],[9,8],[9,9]],y={giveCoordinates:function(){var e=Math.floor(Math.random()*E.length),n=E[e];return E=E.filter((function(e){return e!==n})),n}},g(g({},C),y)),w=function(){document.querySelectorAll(".computer-tile").forEach((function(e,n){e.addEventListener("click",(function(){var e=x.changeToCoordinates(n);k.gameboard.receiveAttack(e[0],e[1]),h(k.gameboard.state),k.gameboard.allShipsSunk()&&console.log("Human wins!");var r=k.giveCoordinates();x.gameboard.receiveAttack(r[0],r[1]),f(x.gameboard.state),x.gameboard.allShipsSunk()&&console.log("Computer wins!"),w()}))}))};f(x.gameboard.state),h(k.gameboard.state),w()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,